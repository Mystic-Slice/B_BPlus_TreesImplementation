// Parent merging test

tree.insertKey(10);
tree.insertKey(20);
tree.insertKey(30);
tree.insertKey(40);
tree.insertKey(50);
tree.insertKey(60);
tree.insertKey(70);
tree.insertKey(80);
tree.insertKey(90);
tree.insertKey(100);
tree.insertKey(110);
tree.insertKey(120);
tree.insertKey(130);
tree.insertKey(140);
tree.insertKey(150);
tree.insertKey(160);
tree.insertKey(170);
tree.insertKey(180);
tree.insertKey(190);
tree.insertKey(200);
tree.insertKey(210);
tree.insertKey(220);
tree.insertKey(230);
tree.insertKey(240);
tree.insertKey(250);
tree.insertKey(260);
tree.insertKey(270);
tree.insertKey(280);
tree.insertKey(290);
tree.insertKey(300);
tree.insertKey(310);
tree.insertKey(95);

tree.deleteKey(50);
tree.deleteKey(60);
tree.deleteKey(30);
tree.deleteKey(90);
tree.deleteKey(20);
tree.deleteKey(95);
tree.deleteKey(40);
tree.deleteKey(230);
tree.deleteKey(240);
tree.deleteKey(250);
tree.deleteKey(260);
tree.deleteKey(290);
tree.deleteKey(300);
tree.deleteKey(270);
tree.deleteKey(280);
tree.deleteKey(210);
tree.deleteKey(220);

// Tree collapses to root
tree.insertKey(10);
tree.insertKey(20);
tree.insertKey(30);
tree.insertKey(40);
tree.insertKey(50);
tree.insertKey(60);

tree.deleteKey(30);
tree.deleteKey(60);
tree.deleteKey(40);


// B plus insertions and deletions
    vector<int> insertKeys = { 
        1804,
        846,
        1681,
        1714,
        1957,
        424,
        719,
        1649,
        596,
        1189,
        1025,
        1350,
        783,
        1102,
        2044,
        1967,
        1365,
        1540,
        304,
        1303,
        35,
        521,
    };

    for(auto i: insertKeys) {
        cout<<endl<<endl;
        tree.insertKey(i);
        cout<<"Inserted "<<i<<endl;
        tree.levelOrder();
        // cout<<"Leaves ";
        // tree.traverseLeaves();
    }

    tree.inorderTraversal();
    cout<<endl;

    vector<int> deleteKeys = {
        1365,
        1714,
        783,
        596,
        304,
        35,
        1957,
        1967,
        1189,
        1102,
        521,
        1025,
        424,
        1681,
        1804,
        719,
        846,
        1540,
        1303,
        1649,
        2044,
        1350
    };

    for(auto i: deleteKeys) {
        cout<<endl<<endl;
        tree.deleteKey(i);
        cout<<"Deleted "<<i<<endl;
        tree.levelOrder();
        // cout<<"Leaves ";
        // tree.traverseLeaves();
    }

// B tree insertions adn deletions
    vector<int> insertKeys = { 
        770,
        449,
        943,
        248,
        765,
        192,
        454,
        743,
        792,
        390,
        104,
        12,
        37,
        85,
        636,
        790,
        503,
        299,
        445,
        926,
        290,
        440,
        755,
        155,
        780,
        65,
        275,
        368,
        311,
        54
    };

    for(auto i: insertKeys) {
        cout<<endl<<endl;
        tree.insertKey(i);
        cout<<"Inserted "<<i<<endl;
        tree.levelOrder();
        // cout<<"Leaves ";
        // tree.traverseLeaves();
    }

    tree.inorderTraversal();
    cout<<endl;

    vector<int> deleteKeys = {
        790,
        104,
        454,
        765,
        503,
        248,
        192,
        290,
        12,
        37
    };

    for(auto i: deleteKeys) {
        cout<<endl<<endl;
        tree.deleteKey(i);
        cout<<"Deleted "<<i<<endl;
        tree.levelOrder();
        // cout<<"Leaves ";
        // tree.traverseLeaves();
    }