// Parent merging test

tree.insertKey(10);
tree.insertKey(20);
tree.insertKey(30);
tree.insertKey(40);
tree.insertKey(50);
tree.insertKey(60);
tree.insertKey(70);
tree.insertKey(80);
tree.insertKey(90);
tree.insertKey(100);
tree.insertKey(110);
tree.insertKey(120);
tree.insertKey(130);
tree.insertKey(140);
tree.insertKey(150);
tree.insertKey(160);
tree.insertKey(170);
tree.insertKey(180);
tree.insertKey(190);
tree.insertKey(200);
tree.insertKey(210);
tree.insertKey(220);
tree.insertKey(230);
tree.insertKey(240);
tree.insertKey(250);
tree.insertKey(260);
tree.insertKey(270);
tree.insertKey(280);
tree.insertKey(290);
tree.insertKey(300);
tree.insertKey(310);
tree.insertKey(95);

tree.deleteKey(50);
tree.deleteKey(60);
tree.deleteKey(30);
tree.deleteKey(90);
tree.deleteKey(20);
tree.deleteKey(95);
tree.deleteKey(40);
tree.deleteKey(230);
tree.deleteKey(240);
tree.deleteKey(250);
tree.deleteKey(260);
tree.deleteKey(290);
tree.deleteKey(300);
tree.deleteKey(270);
tree.deleteKey(280);
tree.deleteKey(210);
tree.deleteKey(220);

// Tree collapses to root
tree.insertKey(10);
tree.insertKey(20);
tree.insertKey(30);
tree.insertKey(40);
tree.insertKey(50);
tree.insertKey(60);

tree.deleteKey(30);
tree.deleteKey(60);
tree.deleteKey(40);


// Assignment Insertions and Deletions
tree.insertKey(1804);
tree.insertKey(846);
tree.insertKey(1681);
tree.insertKey(1714);
tree.insertKey(1957);
tree.insertKey(424);
tree.insertKey(719);
tree.insertKey(1649);
tree.insertKey(596);
tree.insertKey(1189);
tree.insertKey(1025);
tree.insertKey(1350);
tree.insertKey(783);
tree.insertKey(1102);
tree.insertKey(2044);
tree.insertKey(1967);
tree.insertKey(1365);
tree.insertKey(1540);
tree.insertKey(304);
tree.insertKey(1303);
tree.insertKey(35);
tree.insertKey(521);
tree.levelOrder();


vector<int> deleteKeys = {
    1365,
    1714,
    783,
    596,
    304,
    35,
    1957,
    1967,
    1189,
    1102,
    521,
    1025
};

for(auto i: deleteKeys) {
    cout<<endl<<endl;
    tree.deleteKey(i);
    cout<<"Deleted "<<i<<endl;
    tree.levelOrder();
}